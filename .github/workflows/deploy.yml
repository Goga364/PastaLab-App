name: Build & Deploy to EC2

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build app
        env:
          VITE_TERMINAL_GROUP_ID: ${{ secrets.VITE_TERMINAL_GROUP_ID }}
          VITE_ORGANIZATION_ID: ${{ secrets.VITE_ORGANIZATION_ID }}
          VITE_SYVRE_API_KEY: ${{ secrets.VITE_SYVRE_API_KEY }}
        run: npm run build

  deploy:
    name: Deploy to EC2 (Production Only)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SSH into EC2 and deploy
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/app/PastaLab-App
            
            # Pull the latest code
            git pull origin prod
            
            # Install dependencies
            npm install
            
            # Build the app
            VITE_TERMINAL_GROUP_ID=${{ secrets.VITE_TERMINAL_GROUP_ID }} \
            VITE_ORGANIZATION_ID=${{ secrets.VITE_ORGANIZATION_ID }} \
            VITE_SYVRE_API_KEY=${{ secrets.VITE_SYVRE_API_KEY }} \
            npm run build
            
            # Install PM2 if not installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Start or restart the app with PM2
            pm2 restart PastaLab-App || pm2 start npm --name PastaLab-App -- run dev -- --host
            
            # Save the PM2 process list for auto-restart on reboot
            pm2 save
            
            # Reload Nginx for updated proxy settings
            sudo nginx -t && sudo systemctl reload nginx
          EOF

      - name: Health Check
        run: |
          for i in {1..5}; do
            RESPONSE=$(curl -s -k https://${{ secrets.EC2_HOST }})
            STATUS=$(echo "$RESPONSE" | grep -i "PastaLab" || true)
            
            if [ ! -z "$STATUS" ]; then
              echo "✅ Health check passed!"
              exit 0
            else
              echo "❌ Health check failed, retrying in 5s..."
              sleep 5
            fi
          done
          echo "❌ Health check failed after 5 attempts, aborting."
          exit 1
