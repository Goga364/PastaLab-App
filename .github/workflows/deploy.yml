name: Build & Deploy to EC2

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build app
        env:
          VITE_TERMINAL_GROUP_ID: ${{ secrets.VITE_TERMINAL_GROUP_ID }}
          VITE_ORGANIZATION_ID: ${{ secrets.VITE_ORGANIZATION_ID }}
          VITE_SYVRE_API_KEY: ${{ secrets.VITE_SYVRE_API_KEY }}
        run: npm run build

  deploy:
    name: Deploy to EC2 (Production Only)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SSH into EC2 and deploy
        env:
          VITE_TERMINAL_GROUP_ID: ${{ secrets.VITE_TERMINAL_GROUP_ID }}
          VITE_ORGANIZATION_ID: ${{ secrets.VITE_ORGANIZATION_ID }}
          VITE_SYVRE_API_KEY: ${{ secrets.VITE_SYVRE_API_KEY }}
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/app/PastaLab-App
            
            # Pull the latest code
            git pull origin prod
            
            # Install dependencies
            npm install
            
            # Copy .env template and replace placeholders
            cp .env.template .env
            sed -i "s|__VITE_TERMINAL_GROUP_ID__|${VITE_TERMINAL_GROUP_ID}|g" .env
            sed -i "s|__VITE_ORGANIZATION_ID__|${VITE_ORGANIZATION_ID}|g" .env
            sed -i "s|__VITE_SYVRE_API_KEY__|${VITE_SYVRE_API_KEY}|g" .env
            
            # Build the app with environment variables
            npm run build
            
            # Start or restart the app with PM2
            pm2 start ecosystem.config.cjs --update-env
            pm2 save
            
            # Reload Nginx for updated proxy settings
            sudo nginx -t && sudo systemctl reload nginx
          EOF
